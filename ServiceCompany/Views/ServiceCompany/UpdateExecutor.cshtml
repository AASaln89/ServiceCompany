@using ServiceCompany.DbStuff.Models.Enums
@model ExecutorViewModel

@{
    Layout = "_LayoutServiceCompany";
}

@section Style
{
    <link href="~/css/ServiceCompany.css" rel="stylesheet" />
    <link href="~/css/Styles.css" rel="stylesheet" />
}

<div class="regContainer">
    <h2>Панель администратора</h2>
    <div>
        <div class="add-user">
            <h2>Добавить исполнителя</h2>
            <form method="post" action="/ServiceCompany/UpdateExecutor">
                <input type="hidden" name="id" value="@Model.Id" />
                <label for="firstName"> Имя:</label>
                @Html.TextBoxFor(x => x.FirstName)
                @Html.ValidationMessageFor(x => x.FirstName)

                <label for="lastName"> Фамилия:</label>
                @Html.TextBoxFor(x => x.LastName)
                @Html.ValidationMessageFor(x => x.LastName)

                <label for="nickName"> Ник на сайте:</label>
                @Html.TextBoxFor(x => x.NickName)
                @Html.ValidationMessageFor(x => x.NickName)

                <label for="email">Электронная почта:</label>
                @Html.TextBoxFor(x => x.Email)
                @Html.ValidationMessageFor(x => x.Email)

                <label for="password">Пароль для пользователя:</label>
                @Html.TextBoxFor(x => x.Password)
                @Html.ValidationMessageFor(x => x.Password)

                <label for="phoneNumber">Номер телефона:</label>
                @Html.TextBoxFor(x => x.PhoneNumber)
                @Html.ValidationMessageFor(x => x.PhoneNumber)

                <label for="expireDate">Выберите дату:</label>
                <div class="change">
                    @Html.TextBoxFor(x => x.ExpireDate, new { @class = "company-status", @readonly = "readonly" })
                    @Html.TextBoxFor(x => x.ExpireDate, new { type = "date" })
                </div>
                @Html.ValidationMessageFor(x => x.ExpireDate)

                <label for="permission">Уровень доступа:</label>
                <div class="change">
                    @Html.TextBoxFor(x => x.MemberRole, new { @class = "company-status", @readonly = "readonly" })
                    @Html.DropDownList("permissionId", Model.Permissions, new { @class = "company-status-list" })
                </div>

                <label for="company">Компания:</label>
                <div class="change">
                    @Html.TextBoxFor(x => x.Company, new { @class = "company-status", @readonly = "readonly" })
                    @Html.DropDownList("companyId", Model.Companies, new { @class = "company-status-list" })
                </div>

                <label for="project">Проект:</label>
                <div class="change">
                    @for (int j = 0; j < Model.Projects.Count; j++)
                    {
                        <div class="change">
                            @Html.TextBoxFor(x => x.Projects[j].Text, new { @class = "company-status", @readonly = "readonly" })
                            <a href="Delete">Delete</a>
                        </div>
                    }
                </div>
                @Html.DropDownList("projectId", Model.Projects, new { @class = "company-status-list" })
                <input class="submit" type="submit" value="Обновить информацию" />
            </form>
        </div>
    </div>
</div>


